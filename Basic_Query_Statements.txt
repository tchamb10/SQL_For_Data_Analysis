SELECT - selects columns from certain table (can specify multiply columns separated by ',')
    Derived Column - when selecting columns, you can create a new column for example of 2 columns added together, you can name this new column by using AS
    You can also give a column an Alias name within a table
    COUNT - counts # of rows in column

FROM - get tables from which you want to pull data
    You can give table names shorter alias by typing a letter or new name next to the FROM statement or JOIN

WHERE - display subsets of tables based on conditions that must be met
    LIKE - operator that can find things such as all company names that start with 'S'
    IN - operator similar to '=' but can be run on multiple values
    NOT - can be paired up with other operators to find the opposite
    AND - operator that allows you to run two logical statements
    BETWEEN - use with and to make a cleaner statement 
    OR - links multiple logical statements (logic OR) can be used with all other operators

ORDER BY - sort the results using data in any column (use DESC to order in descending), can use multiple columns in case one column has the same value

LIMIT n - get first number n rows of table

JOIN - joins information from one table to another
    ON - using primary and foreign keys that link the tables together
    LEFT JOIN - produces the same output as join/inner join but includes information from the 
                left table even if it doesnt correspond to the right (the information will be 
                filled with NULL)
    RIGHT JOIN - produces same output as left but for right table



Aggregates: 

SUM - adds together all values in columns
MIN/MAX - return lowest lowest and highest values in column
AVERAGE - returns average of all values in column
DISTINCT - get unique values of column


GROUP BY - aggregate data within subsets of the data


HAVING - when using aggregate functions, the WHERE clause doesn't work, so we replace it with HAVING. WHERE
         and HAVING work the same.

DATES -
    DATE_TRUNC - allows truncating a date by day, month, or year
    DATE_PART - useful when pulling specific portion of a date like day of the week (dow) or month

CASE - CASE statements are if then else then logic statements, they are comprised of WHEN, THEN, END with
       an optional component ELSE.
       You can string multiple condition statements using AND and OR 

